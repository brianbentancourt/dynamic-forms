[{"E:\\Proyectos\\dynamic-forms\\src\\index.js":"1","E:\\Proyectos\\dynamic-forms\\src\\reportWebVitals.js":"2","E:\\Proyectos\\dynamic-forms\\src\\components\\title\\index.js":"3","E:\\Proyectos\\dynamic-forms\\src\\containers\\formBuilderContainer.js":"4","E:\\Proyectos\\dynamic-forms\\src\\utils\\formUtils.js":"5","E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\DDDroppable.js":"6","E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\DraggableItem.js":"7","E:\\Proyectos\\dynamic-forms\\src\\App.js":"8","E:\\Proyectos\\dynamic-forms\\src\\components\\formBuilder\\index.js":"9","E:\\Proyectos\\dynamic-forms\\src\\templates\\data.js":"10","E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\draggableItem.js":"11","E:\\Proyectos\\dynamic-forms\\src\\form\\formEditElement.js":"12","E:\\Proyectos\\dynamic-forms\\src\\form\\formElement.js":"13","E:\\Proyectos\\dynamic-forms\\src\\form\\formBuilderOptions.js":"14","E:\\Proyectos\\dynamic-forms\\src\\reducers\\formBuilder.js":"15","E:\\Proyectos\\dynamic-forms\\src\\form\\formElementComponent.js":"16","E:\\Proyectos\\dynamic-forms\\src\\components\\formManagement\\index.js":"17","E:\\Proyectos\\dynamic-forms\\src\\pages\\formBuilder.js":"18","E:\\Proyectos\\dynamic-forms\\src\\constants\\contants.js":"19","E:\\Proyectos\\dynamic-forms\\src\\reducers\\formRender.js":"20","E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\dDDroppable.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":364,"mtime":1606748086434,"results":"25","hashOfConfig":"23"},{"size":1423,"mtime":1607372702436,"results":"26","hashOfConfig":"23"},{"size":2170,"mtime":1607365039500,"results":"27","hashOfConfig":"23"},{"size":469,"mtime":1606751739883,"results":"28","hashOfConfig":"23"},{"size":661,"mtime":1606751794603,"results":"29","hashOfConfig":"23"},{"size":260,"mtime":1606748159754,"results":"30","hashOfConfig":"23"},{"size":5005,"mtime":1607371523349,"results":"31","hashOfConfig":"23"},{"size":357,"mtime":1607372147292,"results":"32","hashOfConfig":"23"},{"size":659,"mtime":1607372434686,"results":"33","hashOfConfig":"23"},{"size":5192,"mtime":1607361216442,"results":"34","hashOfConfig":"23"},{"size":5385,"mtime":1607371475036,"results":"35","hashOfConfig":"23"},{"size":2038,"mtime":1606765199224,"results":"36","hashOfConfig":"23"},{"size":3274,"mtime":1607364918708,"results":"37","hashOfConfig":"23"},{"size":1504,"mtime":1607371739913,"results":"38","hashOfConfig":"23"},{"size":1789,"mtime":1607372715535,"results":"39","hashOfConfig":"23"},{"size":736,"mtime":1606748434361,"results":"40","hashOfConfig":"23"},{"size":550,"mtime":1606503769282,"results":"41","hashOfConfig":"23"},{"size":344,"mtime":1607360716331,"results":"42","hashOfConfig":"23"},{"size":515,"mtime":1606755557120,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7jzjk4",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"E:\\Proyectos\\dynamic-forms\\src\\index.js",[],["91","92"],"E:\\Proyectos\\dynamic-forms\\src\\reportWebVitals.js",[],["93","94"],"E:\\Proyectos\\dynamic-forms\\src\\components\\title\\index.js",[],"E:\\Proyectos\\dynamic-forms\\src\\containers\\formBuilderContainer.js",[],"E:\\Proyectos\\dynamic-forms\\src\\utils\\formUtils.js",[],"E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\DDDroppable.js",["95"],"E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\DraggableItem.js",[],"E:\\Proyectos\\dynamic-forms\\src\\App.js",[],"E:\\Proyectos\\dynamic-forms\\src\\components\\formBuilder\\index.js",[],"E:\\Proyectos\\dynamic-forms\\src\\templates\\data.js",[],"E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\draggableItem.js",[],"E:\\Proyectos\\dynamic-forms\\src\\form\\formEditElement.js",["96","97"],"import React from 'react'\r\nimport { ELEMENT_TYPE } from '../constants/contants'\r\nimport map from 'lodash/map'\r\nimport keys from 'lodash/keys'\r\nimport upperFirst from 'lodash/upperFirst'\r\nimport FormBuilderOptions from './formBuilderOptions'\r\nimport FormElementComponent from \"./formElementComponent\"\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  FormControl,\r\n  Button,\r\n  TextField,\r\n  NativeSelect,\r\n  InputLabel,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  InputBase\r\n} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase)\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: 120\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    padding: '0 0 0 8px'\r\n  },\r\n  margin: {\r\n    marginTop: 10\r\n  }\r\n})\r\n\r\nfunction getOptions() {\r\n  return map(keys(ELEMENT_TYPE), (key) => <option key={key} value={ELEMENT_TYPE[key]} >{upperFirst(key.toLowerCase())} </option>)\r\n}\r\n\r\nfunction FormEditElement(props) {\r\n  const classes = useStyles()\r\n\r\n  const { element, onRemElement, onChange, onDragEnd, editMode, onToggle, onAddOption } = props\r\n  let textInput = React.createRef()\r\n\r\n  const onChangeDisplayName = onChange('displayName')\r\n  const onChangeType = onChange('type')\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onAddOption(element.elementId, textInput.current.value);\r\n      textInput.current.value = ''\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          style={{marginBottom: 10}}\r\n        >\r\n          <Grid>\r\n            <Typography variant=\"h6\" component=\"h3\">\r\n              {element.type}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid>\r\n            <IconButton className={classes.button} aria-label=\"edit\" color=\"default\" onClick={() => onToggle(element.elementId)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton className={classes.button} aria-label=\"delete\" color=\"secondary\" onClick={onRemElement}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid>\r\n          {!editMode[element.elementId] ? <FormElementComponent element={element} /> :\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"flex-start\"\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid>\r\n                <TextField id=\"inputName\" label=\"Name\" placeholder=\"Input name\" value={element.displayName} onChange={(e) => onChangeDisplayName(e.target.value)} variant=\"outlined\" size=\"small\" />\r\n              </Grid>\r\n              <Grid>\r\n                <FormControl className={classes.margin}>\r\n                  <InputLabel htmlFor=\"demo-customized-select-native\">Type</InputLabel>\r\n                  <NativeSelect\r\n                    id=\"inputType\"\r\n                    value={element.type}\r\n                    onChange={(e) => onChangeType(e.target.value)}\r\n                    input={<BootstrapInput />}\r\n\r\n                  >\r\n                    {getOptions()}\r\n                  </NativeSelect>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {element.type === ELEMENT_TYPE.SIMPLE_SELECT || element.type === ELEMENT_TYPE.RADIO ?\r\n                <React.Fragment>\r\n                  <Grid>\r\n                    <FormBuilderOptions formElementValues={element.formElementValues} type={element.elementId} onDragEnd={onDragEnd} />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <TextField id=\"inputName\" label=\"Opción\" placeholder=\"Ingrese descripcion\" ref={textInput} onKeyPress={handleKeyPress} variant=\"outlined\" size=\"small\" />\r\n                  </Grid>\r\n                </React.Fragment>\r\n                : null}\r\n            </Grid>}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n\r\n}\r\n\r\nexport default FormEditElement\r\n","E:\\Proyectos\\dynamic-forms\\src\\form\\formElement.js",["98"],"E:\\Proyectos\\dynamic-forms\\src\\form\\formBuilderOptions.js",["99"],"import React from 'react'\r\nimport get from 'lodash/get'\r\nimport { DDDroppable } from \"../components/dragAndDrop/dDDroppable\"\r\nimport { DraggableItem } from \"../components/dragAndDrop/draggableItem\"\r\nimport map from 'lodash/fp/map'\r\nimport entries from 'lodash/fp/entries'\r\nimport flow from 'lodash/fp/flow'\r\nimport cond from 'lodash/fp/cond'\r\nimport stubTrue from 'lodash/fp/stubTrue'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Card\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: 50,\r\n    padding: 10\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    padding: '0 0 0 8px'\r\n  },\r\n  margin: {\r\n    marginTop: 10\r\n  }\r\n})\r\n\r\nconst getNull = _ => null\r\n\r\nfunction FormListOptions({ formElementValues }) {\r\n\r\n  const hasItems = (items) => items && items.length\r\n  const classes = useStyles()\r\n\r\n  const currentItem = ([index, item]) => (\r\n    <DraggableItem key={item.elementvalueId} draggableId={item.elementvalueId} index={index}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n      <Grid \r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      >\r\n        <TextField id={item.elementvalueId} name={item.elementvalueId} label=\"Opción\" placeholder=\"Ingrese nombre\" value={item.displayName} onChange={() => { }} value={get(item, 'displayName')} variant=\"outlined\" size=\"small\" />\r\n      </Grid>\r\n      </Card>\r\n    </DraggableItem>\r\n  )\r\n\r\n  return cond([\r\n    [hasItems, flow(entries, map(currentItem))],\r\n    [stubTrue, getNull]\r\n  ])(formElementValues)\r\n\r\n}\r\n\r\nfunction FormBuilderOptions(props) {\r\n  const { formElementValues, type } = props;\r\n\r\n  return (\r\n    <DDDroppable droppableId={type} type={type}>\r\n      <FormListOptions formElementValues={formElementValues} />\r\n    </DDDroppable>\r\n  )\r\n}\r\n\r\nexport default FormBuilderOptions;\r\n","E:\\Proyectos\\dynamic-forms\\src\\reducers\\formBuilder.js",[],"E:\\Proyectos\\dynamic-forms\\src\\form\\formElementComponent.js",[],"E:\\Proyectos\\dynamic-forms\\src\\components\\formManagement\\index.js",[],"E:\\Proyectos\\dynamic-forms\\src\\pages\\formBuilder.js",[],"E:\\Proyectos\\dynamic-forms\\src\\constants\\contants.js",[],"E:\\Proyectos\\dynamic-forms\\src\\reducers\\formRender.js",[],"E:\\Proyectos\\dynamic-forms\\src\\components\\dragAndDrop\\dDDroppable.js",[],["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":22},{"ruleId":"108","severity":1,"message":"112","line":11,"column":3,"nodeType":"110","messageId":"111","endLine":11,"endColumn":14},{"ruleId":"108","severity":1,"message":"113","line":14,"column":3,"nodeType":"110","messageId":"111","endLine":14,"endColumn":9},{"ruleId":"108","severity":1,"message":"114","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":57,"column":162,"nodeType":"117","endLine":57,"endColumn":194},{"ruleId":"102","replacedBy":"118"},{"ruleId":"104","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],"no-unused-vars","'getListStyle' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["120"],["121"],"no-global-assign","no-unsafe-negation"]